CREATE TABLE BANK_MASTER(ACNO INT PRIMARY KEY, CNAME VARCHAR(20) NOT NULL,CITY VARCHAR(40) DEFAULT 'HYDERABAD', BALANCE MONEY NOT NULL, BCODE INT FOREIGN KEY REFERENCES B_BRANCH(BCODE))

CREATE TABLE B_BRANCH(BCODE INT PRIMARY KEY,LOCATION VARCHAR(20) NOT NULL)

CREATE TABLE B_TRANSACTION(ACNO INT FOREIGN KEY REFERENCES BANK_MASTER(ACNO), TTYPE CHAR(1), TDATE DATETIME NOT NULL,AMT MONEY NOT NULL)


INSERT INTO B_BRANCH VALUES(1,'HYDERABAD')
INSERT INTO B_BRANCH VALUES(2,'ALWAL')
INSERT INTO B_BRANCH VALUES(3,'MOINABAD')
INSERT INTO B_BRANCH VALUES(4,'SECUNDERABAD')
INSERT INTO B_BRANCH VALUES(5,'HYDERABAD')
SELECT * FROM B_BRANCH
 


INSERT INTO BANK_MASTER VALUES(2401,'AMITH','HYDERABAD',250000,1)
INSERT INTO BANK_MASTER (ACNO,CNAME,BALANCE,BCODE)VALUES(2402,'SUGGU',350000,1)
INSERT INTO BANK_MASTER VALUES(2403,'DEEPU','ALWAL',20000,2)
INSERT INTO BANK_MASTER VALUES(2404,'kiran','HYDERABAD',500000,4)
INSERT INTO BANK_MASTER VALUES(2405,'ajay','HYDERABAD',250000,1)

SELECT * FROM BANK_MASTER


INSERT INTO B_TRANSACTION VALUES(2401,'W',2019-05-24,15000)
INSERT INTO B_TRANSACTION VALUES(2402,'D',2019-03-13,10000)
INSERT INTO B_TRANSACTION VALUES(2403,'W',2019-05-02,16000)
INSERT INTO B_TRANSACTION VALUES(2401,'D',2019-14-01,11000)
INSERT INTO B_TRANSACTION VALUES(2405,'W',2019-08-07,10000)
INSERT INTO B_TRANSACTION VALUES(2402,'D',2019-03-13,10000)
INSERT INTO B_TRANSACTION VALUES(2401,'W',2019-05-02,16000)
INSERT INTO B_TRANSACTION VALUES(2401,'D',2019-14-01,11000)
INSERT INTO B_TRANSACTION VALUES(2403,'W',2019-08-07,10000)
INSERT INTO B_TRANSACTION VALUES(2401,'W',2019-12-07,10000)
SELECT * FROM B_TRANSACTION

1)
SELECT * FROM BANK_MASTER WHERE BALANCE>=30000

2)
SELECT * FROM B_BRANCH B,BANK_MASTER M WHERE EXISTS (SELECT CNAME FROM BANK_MASTER WHERE M.BCODE=B.BCODE)

3)
select * from bank_master where acno=(
select acno from (
select acno,count(*) as countt from B_TRANSACTION where ttype='w' group by acno having 
count(*)=
(select max(countt) from(select acno,count(*) 
as countt from B_TRANSACTION where ttype='w' group by acno )B_transactions))B_transactions)

4)
select * from BANK_MASTER m,B_BRANCH b where b.BCODE=m.BCODE and m.BCODE in
(select BCODE from BANK_MASTER group by BCODE having sum(balance)>200000)

5)
create nonclustered index clustered_location on b_branch(location)
select * from B_BRANCH


6)
CREATE TRIGGER T11 ON B_TRANSACTION AFTER INSERT
AS
BEGIN
DECLARE C1 CURSOR FOR SELECT * FROM B_TRANSACTION
DECLARE @ACCNO INT,@TTYPE VARCHAR(2),@DATE DATETIME, @AMOUNT INT
OPEN C1
FETCH NEXT FROM C1 INTO @ACCNO,@TTYPE,@DATE,@AMOUNT --START THE LOOP
WHILE(@@FETCH_STATUS=0)
BEGIN
FETCH NEXT FROM C1 INTO @ACCNO,@TTYPE,@DATE,@AMOUNT -- CONTINUE THE LOOP
END
IF @TTYPE='D'
UPDATE bank_MASTER SET BALANCE=BALANCE +@AMOUNT WHERE ACNO=@ACCNO
ELSE
UPDATE bank_MASTER SET BALANCE=BALANCE -@AMOUNT WHERE ACNO=@ACCNO
CLOSE C1
DEALLOCATE C1
END
----INSERTION INTO B_TRANSACTION
INSERT INTO B_TRANSACTION VALUES(2401,'W',2019-09-27,10000)
INSERT INTO B_TRANSACTION VALUES(2401,'D',2019-09-27,10000)
select * from BANK_MASTER
7)
create view vw
as
select * from bank_master where balance > 5000
select * from vw

8) 
create proc p(@a int)
as
begin
exec('select * from bank_master where acno='+@a)
end
exec p 2401

9)
select * from B_TRANSACTION order by TDATE 

10)
create function 
intrst(@a int)
returns float
as
begin
declare @c float,@bal int,@j int
SELECT @J=balance FROM bank_master WHERE acno=@a
if  @j>=100000
begin 
set @c=@j*0.1

end
return @j+@c
end

declare @a int
set @a= dbo.intrst(2401)
print @a 
update bank_master set balance=@a where acno =2401

select * from bank_master
select * from b_branch

11)
select * from bank_master where balance=(select max(balance) from bank_master where 
balance<(select max(balance) from bank_master where balance<(select max(balance) from bank_master)))