create database PRASANNA_CASESTUDY
use PRASANNA_CASESTUDY
drop table BRANCHS
CREATE TABLE BRANCHS(BRANCHCODE INT PRIMARY KEY ,  LOCATION VARCHAR(10) NOT NULL )
--INSERTING VALUES INTO THE TABLE
INSERT INTO BRANCHS VALUES(101 , 'WARANGAL')
INSERT INTO BRANCHS VALUES(102 , 'PUNE')
INSERT INTO BRANCHS VALUES(103 , 'CHENNAI')
INSERT INTO BRANCHS VALUES(104 , 'KERELA')
INSERT INTO BRANCHS VALUES(105 , 'GOA')
SELECT * FROM BRANCHS

--CREATING A TABLE FOR BANKMASTER WITH REFERENCE TO BRANCES
CREATE TABLE BANKMASTER(ACCNO INT PRIMARY KEY , CNAME VARCHAR(20) NOT NULL , CITY VARCHAR(20) DEFAULT 'HYDERABAD' , BALANCE MONEY NOT NULL CHECK(BALANCE >500) , BRANCHCODE INT FOREIGN KEY REFERENCES BRANCHS(BRANCHCODE))
INSERT INTO BANKMASTER VALUES(25643781 , 'MEGHANA' , 'HYDERABD' , 50000 ,103)
INSERT INTO BANKMASTER VALUES(25643782 , 'ARCHANA' , 'WARANGAL' , 15000 ,101)
INSERT INTO BANKMASTER VALUES(25643783 , 'SURYA' , 'PUNE' , 25000,105)
INSERT INTO BANKMASTER VALUES(25643784 , 'APOORVA' , 'CHENNAI' , 35000 ,102)
INSERT INTO BANKMASTER VALUES(25643785 , 'DOLLY' , 'GOA' , 45000,104)
SELECT * FROM BANKMASTER

--CREATING A TABLE FOR BANKTRANSACTION WITH REFERENCE TO BANKMASTER
CREATE TABLE BANKTRANSACTION(ACCNO INT FOREIGN KEY REFERENCES BANKMASTER(ACCNO) , TTYPE CHAR , TDATE DATETIME NOT NULL , AMT MONEY NOT NULL)
INSERT INTO BANKTRANSACTION VALUES(25643781 , 'W' , '2000-02-03' , 50000)
INSERT INTO BANKTRANSACTION VALUES(25643782 , 'D' , '2001-04-13' , 15000)
INSERT INTO BANKTRANSACTION VALUES(25643783 , 'W' , '2002-05-03' , 25000)
INSERT INTO BANKTRANSACTION VALUES(25643784 , 'D' , '2003-06-13' , 35000)
INSERT INTO BANKTRANSACTION VALUES(25643785 , 'W' , '2004-11-23' , 45000)
SELECT * FROM BANKTRANSACTION

--1 ans
select * from BankMaster where balance>=30000
--2 ans 
select Branchs.*,BankMaster.* from Branchs inner join BankMaster
on Branchs.Branchcode=BankMaster.Branchcode
-- 3 ans
select cname from BANKMASTER where ACCNO=
(select ACCNO from BANKTRANSACTION where BALANCE=
(select max('w') from BANKTRANSACTION where BALANCE
in(select ACCNO from BANKTRANSACTION group by ACCNO)))
--4 ans
select BANKMASTER.*,BRANCHS.* from BANKMASTER,BRANCHS where BRANCHS.BRANCHCODE=BANKMASTER.BRANCHCODE and BANKMASTER.BRANCHCODE in
(select BRANCHCODE from BANKMASTER group by BRANCHCODE having sum(balance)>10000)
--5 ans
create nonclustered index i1 on Branchs(location)
--6 ans
DROP TABLE bankbackup
create table bankbackup(Accnos int,Ttype char,Tdate datetime,Amt int)
select * from bankbackup
ALTER TRIGGER T4 ON bankbackup -- creating trigger
for insert
AS
BEGIN
declare c4 cursor scroll for select ACCNOS,ttype,amt,balance from bankbackup,bankmaster where ACCNOS=bankmaster.ACCNO
declare @acCNoS int,@ttype varchar(1),@amt money,@bal money
open c4
	fetch last from c4 into @acCNoS,@ttype,@amt,@bal
	if @@FETCH_STATUS = 0
	begin
IF @TTYPE='D'
UPDATE BANKMASTER SET BALANCE=BALANCE +500 WHERE ACCNO=@ACCNOS
ELSE
UPDATE BANKMASTER SET BALANCE=BALANCE -500 WHERE ACCNO=@ACCNOS
END
ELSE 
PRINT'SORRY'
CLOSE C4
DEALLOCATE C4
END
	INSERT INTO bankbackup VALUES(2738827,'D',GETDATE(),80000)
--7 ans
--drop view bal
create view bal as select * from BANKMASTER where BALANCE>5000 -- creating a view
select * from bal
--8 ans
create proc bank(@ano int) --creating procedure
as
begin
select * from BankMaster where ACCNO=@ano
end
	exec bank 25643784
--9 ans
select * from BANKTRANSACTION order by TDATE 
--10 ans
alter function calcint(@an int) -- creating function
returns float
as
begin
declare @c float,@bal int,@j int
SELECT @j=balance FROM bankmaster WHERE accno=@an
if  @j>=0
begin 
set @c=@j*0.1
--print 'Intrest calculated'
end
return @j+@c                                    
end
declare @a int
set @a= dbo.calcint(25643785)
print @a 
update bankmaster set balance=@a where accno =25643785
-- 11 ans
select cname from BANKMASTER b where 2=(select count(distinct BALANCE) from BANKMASTER where BALANCE>b.BALANCE)-- using Nth query
 